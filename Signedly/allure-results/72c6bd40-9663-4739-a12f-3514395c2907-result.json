{"name": "test_folder_creation", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: Locator.wait_for: Error: strict mode violation: locator(\".loader\") resolved to 2 elements:\n    1) <div class=\"loader\"></div> aka locator(\".loader\").first\n    2) <div class=\"loader\"></div> aka locator(\".main > div > .loader\")\n\nCall log:\nwaiting for locator(\".loader\") to be hidden", "trace": "page = <Page url='https://qa.signedly.com/main/documents/DocumentType@904cbd42-c7ba-4e8f-ba8a-82c9365ba5c5/document-timeline'>\n\n    @allure.feature(\"Folder Creation Document Upload Self Signee\")\n    @allure.story(\"Folder Creation\")\n    def test_folder_creation(page:Page):\n        home = HomePage(page)\n        home.folder_button()\n        fold = FoldersPage(page)\n        fold.click_on_create_fold_btn()\n        folder_name = fold.folder_names()\n        page.locator(\".loader\").first.wait_for(state=\"hidden\", timeout=50000)\n        print(\"Folder Name is:\", folder_name)\n        folder_listt = home.folder_list()\n        rows = folder_listt.all()\n        for row in rows:\n            fold_values = row.text_content().strip()\n            if fold_values == folder_name:\n                row.click()\n                break\n        fold.click_on_upload_doc()\n        file_upload = UploadFile(page)\n        file_name, new_file_path = file_upload.upload_document()\n        print(file_name)\n        signee = AddSignee(page)\n        signee.signee_page()\n        page.locator(\".loader\").first.wait_for(state=\"hidden\", timeout=100000)\n        prepare = PreparePage(page)\n        prepare.draggelement()\n        prepare.elements_flow()\n        prepare.click_on_next_button()\n        prepare.click_on_accept_btn()\n        page.locator(\".loader\").first.wait_for(state=\"hidden\", timeout=50000)\n        page.locator(\"(//div[@class='secondary-header__nav__item'])[2]\").click()\n        page.locator(\".loader\").first.wait_for(state=\"hidden\", timeout=50000)\n        doc_lists = home.document_lists()\n        rows = doc_lists.all()\n        for row in rows:\n            doc_values = row.text_content().strip()\n            combine = f\"{folder_name}/{file_name}\"\n            if doc_values == combine:\n                print(\"Ready To Click........\")\n                row.click()\n                break\n>       page.locator(\".loader\").wait_for(state=\"hidden\", timeout=50000)\n\ntest_folder_creation_self_signee.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17736: in wait_for\n    self._sync(self._impl_obj.wait_for(timeout=timeout, state=state))\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:670: in wait_for\n    await self._frame.wait_for_selector(\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000018255E8E060>, cb = <function Channel.send.<locals>.<lambda> at 0x0000018255A84180>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: Locator.wait_for: Error: strict mode violation: locator(\".loader\") resolved to 2 elements:\nE               1) <div class=\"loader\"></div> aka locator(\".loader\").first\nE               2) <div class=\"loader\"></div> aka locator(\".main > div > .loader\")\nE           \nE           Call log:\nE           waiting for locator(\".loader\") to be hidden\n\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:520: Error"}, "attachments": [{"name": "Failure Screenshot", "source": "a98bdcbf-7cce-4896-a604-c20e02a334b8-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "7ddbc1df-931a-424a-9ef8-c90a58371aa6-attachment.txt", "type": "text/plain"}], "start": 1731911681342, "stop": 1731911741067, "uuid": "8c91d456-559a-4a3a-bdb9-957649ca51e3", "historyId": "d55919ec323de95b2562da5438a1de7f", "testCaseId": "d55919ec323de95b2562da5438a1de7f", "fullName": "test_folder_creation_self_signee#test_folder_creation", "labels": [{"name": "feature", "value": "Folder Creation Document Upload Self Signee"}, {"name": "story", "value": "Folder Creation"}, {"name": "suite", "value": "test_folder_creation_self_signee"}, {"name": "host", "value": "REC-Ranjan"}, {"name": "thread", "value": "20904-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_folder_creation_self_signee"}]}